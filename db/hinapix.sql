IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'dbo.PERSON_INFO') AND OBJECTPROPERTY(id, N'IsUserTable') = 1)
DROP TABLE dbo.PERSON_INFO
go

CREATE TABLE PERSON_INFO
(
  PERSON_INFO_ID             [int]    IDENTITY(1,1)   NOT NULL,
  DH_ID                      int             NOT NULL,
  LNAME                      NVARCHAR(64),
  FNAME                      NVARCHAR(64),
  SECNAME                    NVARCHAR(64),
  SUFFIX                     NVARCHAR(64),
  PREFIX                     NVARCHAR(64),
  DEGREE                     NVARCHAR(64),
  NAME_TYPE_CD               NVARCHAR(64),
  NAME_TYPE_REP_CD           NVARCHAR(64),
  SEARCH_KEY                 NVARCHAR(64),
  START_DATE                 DATE,
  END_DATE                   DATE,
  ALIAS                      NUMERIC,
  ADDRESS_1                  NVARCHAR(64),
  ADDRESS_2                  NVARCHAR(64),
  CITY                       NVARCHAR(64),
  STATE_PROV                 NVARCHAR(64),
  ZIP                        NVARCHAR(64),
  COUNTRY                    NVARCHAR(64),
  PARISH_CD                  NVARCHAR(64),
  PA_START_DT                DATE,
  PA_END_DT                  DATE,
  TELECOM_USE_CD             NVARCHAR(64),
  PHONE_COUNTRY_CD           NVARCHAR(64),
  PHONE_AREA_CD              NVARCHAR(64),
  PHONE_NUM                  NVARCHAR(64),
  PHONE_EXT                  NVARCHAR(64),
  EMAIL                      NVARCHAR(64),
  GENDER                     CHAR(1),
  MARITAL_STATUS             CHAR(1),
  DRV_LICENSE_NUM            NVARCHAR(64),
  DRV_LICENSE_ISSUING_STATE  CHAR(2),
  DRV_LICENSE_ISSUE_DATE     DATE,
  ETHNIC_GROUP_CD            NVARCHAR(64),
  RELIGION_TYPE_CD           NVARCHAR(64),
  RACE_CD                    NVARCHAR(64),
  PI_IDENTIFIER_TYPE_CD      NVARCHAR(64),
  PI_EFFECTIVE_DATE          DATE,
  PI_EXPIRATION_DATE         DATE,
  PATIENT_CONSENT            NUMERIC,
  ADDRESS_TYPE_CD            NVARCHAR(64),
  AA_UNIV_ID                 NVARCHAR(64),
  AA_UNIV_ID_TYPE_CD         NVARCHAR(64),
  AA_NAMESPACE_ID            NVARCHAR(64),
  AF_UNIV_ID                 NVARCHAR(64),
  AF_UNIV_ID_TYPE_CD         NVARCHAR(64),
  AF_NAMESPACE_ID            NVARCHAR(64),
  PI_IDENTIFIER              NVARCHAR(256),
  SSN                        NVARCHAR(64),
  DOB                        DATE,
  CORPORATE_ID               NVARCHAR(64),
  UPDATED_CORPORATE_ID       NVARCHAR(64),
  AN_IDENTIFIER        NVARCHAR(64),
  AN_IDENTIFIER_TYPE_CD    NVARCHAR(64),
  AN_AA_NAMESPACE_ID     NVARCHAR(64),
  AN_AA_UNIV_ID          NVARCHAR(64),
  AN_AA_UNIV_ID_TYPE_CD     NVARCHAR(64),
  AN_AF_NAMESPACE_ID    NVARCHAR(64),
  AN_AF_UNIV_ID          NVARCHAR(64),
  AN_AF_UNIV_ID_TYPE_CD    NVARCHAR(64)
)
go


IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'dbo.ETHNIC_GROUP') AND OBJECTPROPERTY(id, N'IsUserTable') = 1)
DROP TABLE dbo.ETHNIC_GROUP
go

CREATE TABLE ETHNIC_GROUP
(
  ETHNIC_GROUP_CD    NVARCHAR(64)          NOT NULL,
  ETHNIC_GROUP_DESC  NVARCHAR(64)
)
go


IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'dbo.ICS_EVENT_LOG') AND OBJECTPROPERTY(id, N'IsUserTable') = 1)
DROP TABLE dbo.ICS_EVENT_LOG
go

CREATE TABLE ICS_EVENT_LOG
(
  ICS_LOG_ID          [int]    IDENTITY(1,1)   NOT NULL,
  EVENT_TYPE          nVARCHAR(64),
  EVENT_DATE		   timestamp,
  CURRENT_PERSON_ID   int,
  CURRENT_PERSON_SSN  nVARCHAR(64),
  CURRENT_PERSON_DOB  DATE,
  ALT_PERSON_ID       int,
  ALT_PERSON_SSN      nVARCHAR(64),
  ALT_PERSON_DOB      DATE,
  USER_ID             nVARCHAR(15),
  REASON              nVARCHAR(2000)
)
go


IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'dbo.ADDRESS_TYPE') AND OBJECTPROPERTY(id, N'IsUserTable') = 1)
DROP TABLE dbo.ADDRESS_TYPE
go

CREATE TABLE ADDRESS_TYPE
(
  ADDRESS_TYPE_CD    NVARCHAR(64)          NOT NULL,
  ADDRESS_TYPE_DESC  NVARCHAR(64)
)
go




IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'dbo.DOCUMENT_HEADER') AND OBJECTPROPERTY(id, N'IsUserTable') = 1)
DROP TABLE dbo.DOCUMENT_HEADER
go


CREATE TABLE DOCUMENT_HEADER
(
  DH_ID          [int]    IDENTITY(1,1)            NOT NULL,
  PERSON_ID      int,
  MSG_DATE       DATE                           NOT NULL,
  MSG_CTRL_ID    nVARCHAR(64),
  SEQ_NUM        nVARCHAR(64),
  CONT_PTR       nVARCHAR(64),
  ACK_TYPE       nVARCHAR(64),
  APP_ACK_TYPE   nVARCHAR(64),
  MSG_SECURITY   nVARCHAR(64),
  REC_APP        nVARCHAR(64),
  REC_FAC        nVARCHAR(64),
  SEND_APP       nVARCHAR(64),
  SEND_FAC       nVARCHAR(64),
  EVENT_CD       nVARCHAR(64),
  MSG_TYPE       nVARCHAR(64),
  TRIGGER_EVENT  nVARCHAR(64),
  MSG_STRUCTURE  nVARCHAR(64)
)
go


IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'dbo.PERSON_NAME_TYPE') AND OBJECTPROPERTY(id, N'IsUserTable') = 1)
DROP TABLE dbo.PERSON_NAME_TYPE
go


CREATE TABLE PERSON_NAME_TYPE
(
  PERSON_NAME_TYPE_CD    nVARCHAR(64)      NOT NULL,
  PERSON_NAME_TYPE_DESC  nVARCHAR(64),
  DEFINITION nVARCHAR(200)
)
go



IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'dbo.PERSON_QUEUE_ELEMENT') AND OBJECTPROPERTY(id, N'IsUserTable') = 1)
DROP TABLE dbo.PERSON_QUEUE_ELEMENT
go

CREATE TABLE PERSON_QUEUE_ELEMENT
(
  QUEUE_ID   NUMERIC                             NOT NULL,
  PERSON_ID  int                             NOT NULL
)
go


IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'dbo.PERSON_QUEUE') AND OBJECTPROPERTY(id, N'IsUserTable') = 1)
DROP TABLE dbo.PERSON_QUEUE
go

CREATE TABLE PERSON_QUEUE
(
  QUEUE_ID     NUMERIC                           NOT NULL,
  DESCRIPTION  nVARCHAR(1000)              NOT NULL,
  USER_ID      nVARCHAR(15),
  USER_DOMAIN  nVARCHAR(100),
  CREATE_DATE  DATE                             NOT NULL
)
go


IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'dbo.PERSON') AND OBJECTPROPERTY(id, N'IsUserTable') = 1)
DROP TABLE dbo.PERSON
go

CREATE TABLE PERSON
(
  PERSON_ID                [int] IDENTITY(1,1) NOT NULL,
  NATIONALITY_CD           nVARCHAR(64),
  NAMESEARCHKEY            nVARCHAR(64),
  PRIMARYLANGUAGE_CD       nVARCHAR(64),
  EXPIRED                  NUMERIC,
  ISPROVIDER               NUMERIC,
  MAIDEN_LNAME             nVARCHAR(64),
  MAIDEN_FNAME             nVARCHAR(64),
  MAIDEN_SECNAME           nVARCHAR(64),
  MAIDEN_SUFFIX            nVARCHAR(64),
  MAIDEN_PREFIX            nVARCHAR(64),
  MAIDEN_DEGREE            nVARCHAR(64),
  MAIDEN_NAME_TYPE_CD      nVARCHAR(64),
  MAIDEN_NAME_TYPE_REP_CD  nVARCHAR(64),
  MAIDEN_SEARCH_KEY        nVARCHAR(64),
  BIRTHPLACE               nVARCHAR(64)
)
go


IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'dbo.LANGUAGE') AND OBJECTPROPERTY(id, N'IsUserTable') = 1)
DROP TABLE dbo.LANGUAGE
go

CREATE TABLE LANGUAGE
(
  LANGUAGE_CD    nVARCHAR(64)              NOT NULL,
  LANGUAGE_DESC  nVARCHAR(64)
)
go



IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'dbo.NATIONALITY') AND OBJECTPROPERTY(id, N'IsUserTable') = 1)
DROP TABLE dbo.NATIONALITY
go

CREATE TABLE NATIONALITY
(
  NATIONALITY_CD    nVARCHAR(64)           NOT NULL,
  NATIONALITY_DESC  nVARCHAR(64)
)
go



IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'dbo.RACE') AND OBJECTPROPERTY(id, N'IsUserTable') = 1)
DROP TABLE dbo.RACE
go

CREATE TABLE RACE
(
  RACE_CD    nVARCHAR(64)                  NOT NULL,
  RACE_DESC  nVARCHAR(64)
)
go


IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'dbo.RELIGION_TYPE') AND OBJECTPROPERTY(id, N'IsUserTable') = 1)
DROP TABLE dbo.RELIGION_TYPE
go

CREATE TABLE RELIGION_TYPE
(
  RELIGION_TYPE_CD    nVARCHAR(64)         NOT NULL,
  RELIGION_TYPE_DESC  nVARCHAR(64)
)
go




IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'dbo.MESSAGE_STORE') AND OBJECTPROPERTY(id, N'IsUserTable') = 1)
DROP TABLE dbo.MESSAGE_STORE
go

CREATE TABLE [dbo].[MESSAGE_STORE](
  [Id] [int] IDENTITY(1,1) NOT NULL,
  [Ip] [varchar](15) NULL,
  [OutMessage] [varchar](1500) NULL,
  [InMessage] [varchar](1500) NULL,
  [MessageDate] [date] NULL,
  [MessageId] [varchar](20) NULL,
  [MessageCode] [varchar] (20) null,
  [TriggerEvent] [varchar] (20) null,
  [ErrorMessage] [varchar](1500) NULL,
  [SendingFacility] [varchar](200) NULL,
  [SendingApplication] [varchar](200) NULL,
  [ReceivingApplication] [varchar](200) NULL,
  [ReceivingFacility] [varchar](200) NULL
 CONSTRAINT [PK_LogMessage] PRIMARY KEY CLUSTERED
(
  [Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]





CREATE INDEX DH_DHID_PID ON DOCUMENT_HEADER
(DH_ID, PERSON_ID)
go


CREATE INDEX DH_PID_DHID ON DOCUMENT_HEADER
(PERSON_ID, DH_ID)
go


CREATE INDEX IEL_ILI_ET_ED ON ICS_EVENT_LOG
(ICS_LOG_ID, EVENT_TYPE, EVENT_DATE)
go


CREATE INDEX PI_ATC ON PERSON_INFO
(ADDRESS_TYPE_CD)
go

CREATE INDEX PI_DHID_PIID ON PERSON_INFO
(DH_ID, PI_IDENTIFIER)
go


CREATE INDEX PI_EGC ON PERSON_INFO
(ETHNIC_GROUP_CD)
go


CREATE INDEX PI_LN_FN ON PERSON_INFO
(LNAME, FNAME)
go

CREATE INDEX PI_NTC ON PERSON_INFO
(NAME_TYPE_CD)
go

CREATE INDEX PI_PIID_SK ON PERSON_INFO
(PI_IDENTIFIER, SEARCH_KEY)
go

CREATE INDEX PI_RC ON PERSON_INFO
(RACE_CD)
go

CREATE INDEX PI_RTC ON PERSON_INFO
(RELIGION_TYPE_CD)
go

CREATE INDEX PI_SK_DHID ON PERSON_INFO
(SEARCH_KEY, DH_ID)
go

CREATE INDEX PI_SSN_SK_DHID ON PERSON_INFO
(SSN, SEARCH_KEY, DH_ID)
go

CREATE INDEX PI_UPPPI_DHID ON PERSON_INFO
(PI_IDENTIFIER, DH_ID)
go

CREATE UNIQUE INDEX PQ_QID_UQ ON PERSON_QUEUE
(QUEUE_ID)
go

CREATE INDEX P_NC ON PERSON
(NATIONALITY_CD)
go

CREATE INDEX P_PLC ON PERSON
(PRIMARYLANGUAGE_CD)
go


ALTER TABLE ADDRESS_TYPE ADD
  PRIMARY KEY
 (ADDRESS_TYPE_CD)
 go


 ALTER TABLE DOCUMENT_HEADER ADD
  PRIMARY KEY
 (DH_ID)
 go

 ALTER TABLE ETHNIC_GROUP ADD
  PRIMARY KEY
 (ETHNIC_GROUP_CD)
 go

 ALTER TABLE ICS_EVENT_LOG ADD
  PRIMARY KEY
 (ICS_LOG_ID)
 go


 ALTER TABLE LANGUAGE ADD
  PRIMARY KEY
 (LANGUAGE_CD)
 go

 ALTER TABLE NATIONALITY ADD
  PRIMARY KEY
 (NATIONALITY_CD)
 go


 ALTER TABLE PERSON ADD
  PRIMARY KEY
 (PERSON_ID)
 go


 ALTER TABLE PERSON_INFO ADD
  PRIMARY KEY
 (PERSON_INFO_ID)
 go


 ALTER TABLE PERSON_NAME_TYPE ADD
  PRIMARY KEY
 (PERSON_NAME_TYPE_CD)
 go


 ALTER TABLE RACE ADD
  PRIMARY KEY
 (RACE_CD)
 go


 ALTER TABLE RELIGION_TYPE ADD
  PRIMARY KEY
 (RELIGION_TYPE_CD)
 go


ALTER TABLE DOCUMENT_HEADER ADD
  CONSTRAINT DH_PRID_TO_PR_PRID_FKEY
 FOREIGN KEY (PERSON_ID)
 REFERENCES PERSON (PERSON_ID)
    ON DELETE CASCADE
	go




ALTER TABLE ICS_EVENT_LOG ADD
  CONSTRAINT EVENT_ALT_PERSON_FKEY
 FOREIGN KEY (ALT_PERSON_ID)
 REFERENCES PERSON (PERSON_ID)
    ON DELETE NO ACTION
	go



ALTER TABLE ICS_EVENT_LOG ADD
  CONSTRAINT EVENT_PERSON_FKEY
 FOREIGN KEY (CURRENT_PERSON_ID)
 REFERENCES PERSON (PERSON_ID)
    ON DELETE NO ACTION
	go



ALTER TABLE PERSON ADD
  CONSTRAINT LANGUAGE_FKEY
 FOREIGN KEY (PRIMARYLANGUAGE_CD)
 REFERENCES LANGUAGE (LANGUAGE_CD)
 go


 ALTER TABLE PERSON ADD
  CONSTRAINT NATIONALITY_FKEY
 FOREIGN KEY (NATIONALITY_CD)
 REFERENCES NATIONALITY (NATIONALITY_CD)
 go


 ALTER TABLE PERSON_INFO ADD
  CONSTRAINT ADDRESS_FKEY
 FOREIGN KEY (ADDRESS_TYPE_CD)
 REFERENCES ADDRESS_TYPE (ADDRESS_TYPE_CD)
 go


 ALTER TABLE PERSON_INFO ADD
  CONSTRAINT ETHNIC_FKEY
 FOREIGN KEY (ETHNIC_GROUP_CD)
 REFERENCES ETHNIC_GROUP (ETHNIC_GROUP_CD)
 go


 ALTER TABLE PERSON_INFO ADD
  CONSTRAINT PER_NAME_TYPE_FKEY
 FOREIGN KEY (NAME_TYPE_CD)
 REFERENCES PERSON_NAME_TYPE (PERSON_NAME_TYPE_CD)
 go



ALTER TABLE PERSON_INFO ADD
  CONSTRAINT PI_DHID_TO_DH_DHID_FKEY
 FOREIGN KEY (DH_ID)
 REFERENCES DOCUMENT_HEADER (DH_ID)
    ON DELETE CASCADE
	go

ALTER TABLE PERSON_INFO ADD
  CONSTRAINT RACE_FKEY
 FOREIGN KEY (RACE_CD)
 REFERENCES RACE (RACE_CD)
 go


 ALTER TABLE PERSON_INFO ADD
  CONSTRAINT RELIGION_FKEY
 FOREIGN KEY (RELIGION_TYPE_CD)
 REFERENCES RELIGION_TYPE (RELIGION_TYPE_CD)
 go


 ALTER TABLE PERSON_QUEUE_ELEMENT ADD
  CONSTRAINT PQE_PID_P_PID_FK
 FOREIGN KEY (PERSON_ID)
 REFERENCES PERSON (PERSON_ID)
 go



ALTER TABLE PERSON_QUEUE_ELEMENT ADD
  CONSTRAINT PQE_QID_PQ_QID_FK
 FOREIGN KEY (QUEUE_ID)
 REFERENCES PERSON_QUEUE (QUEUE_ID)
 go



INSERT INTO ADDRESS_TYPE VALUES ('C', 'Current or Temporary');
INSERT INTO ADDRESS_TYPE VALUES ('P', 'Permanent');
INSERT INTO ADDRESS_TYPE VALUES ('M', 'Mailing');
INSERT INTO ADDRESS_TYPE VALUES ('B', 'Firm/Business');
INSERT INTO ADDRESS_TYPE VALUES ('O', 'Office');
INSERT INTO ADDRESS_TYPE VALUES ('H', 'Home');
INSERT INTO ADDRESS_TYPE VALUES ('N', 'Birth (nee) (birth address, not otherwise specified)');
INSERT INTO ADDRESS_TYPE VALUES ('BDL', 'Birth delivery location (address where birth occurred)');
INSERT INTO ADDRESS_TYPE VALUES ('BR', 'Residence at birth (home address at time of birth)');
INSERT INTO ADDRESS_TYPE VALUES ('F', 'Country Of Origin');
INSERT INTO ADDRESS_TYPE VALUES ('L', 'Legal Address');
INSERT INTO ADDRESS_TYPE VALUES ('RH', 'Registry Home');
INSERT INTO ADDRESS_TYPE VALUES ('BA', 'Bad Address');


INSERT INTO RACE VALUES('AI','American Indian or Alaskan Native');
INSERT INTO RACE VALUES('AP','Asian or Pacific Islander');
INSERT INTO RACE VALUES ('BL', 'Black');
INSERT INTO RACE VALUES('HI','Hispanic');
INSERT INTO RACE VALUES ('WH', 'White');
INSERT INTO RACE VALUES ('race', 'race');


INSERT INTO NATIONALITY VALUES ('ara','Arabic');
INSERT INTO NATIONALITY VALUES ('arm','Armenian');
INSERT INTO NATIONALITY VALUES ('cat','Catalan; Valencian');
INSERT INTO NATIONALITY VALUES ('chi','Chinese');
INSERT INTO NATIONALITY VALUES ('dan','Danish');
INSERT INTO NATIONALITY VALUES ('eng','English');
INSERT INTO NATIONALITY VALUES ('fre','French');
INSERT INTO NATIONALITY VALUES ('ger','German');
INSERT INTO NATIONALITY VALUES ('hat','Haitian; Haitian Creole');
INSERT INTO NATIONALITY VALUES ('heb','Hebrew');
INSERT INTO NATIONALITY VALUES ('hin','Hindi');
INSERT INTO NATIONALITY VALUES ('hmn','Hmong');
INSERT INTO NATIONALITY VALUES ('jpn','Japanese');
INSERT INTO NATIONALITY VALUES ('kor','Korean');
INSERT INTO NATIONALITY VALUES ('rus','Russian');
INSERT INTO NATIONALITY VALUES ('som','Somali');
INSERT INTO NATIONALITY VALUES ('spa','Spanish; Castilian');
INSERT INTO NATIONALITY VALUES ('vie','Vietnamese');

INSERT INTO ETHNIC_GROUP VALUES ('H', 'Hispanic or Latino');
INSERT INTO ETHNIC_GROUP VALUES ('N', 'not Hispanic or Latino');
INSERT INTO ETHNIC_GROUP VALUES ('U', 'Unknown');

INSERT INTO RELIGION_TYPE VALUES ('hindu', 'hindu');

INSERT INTO PERSON_NAME_TYPE VALUES ('A', 'Alias name','This is a nickname or other assumed name.');
INSERT INTO PERSON_NAME_TYPE VALUES ('L', 'Legal','This a person’s official name. It is the primary name
recorded in the IIS');
INSERT INTO PERSON_NAME_TYPE VALUES ('D', 'Display name','This is the preferred name displayed on a user
interface.');
INSERT INTO PERSON_NAME_TYPE VALUES ('M', 'Maiden name','This is a woman’s name before marriage.');
INSERT INTO PERSON_NAME_TYPE VALUES ('C', 'Adopted name','This is the name of a person after adoption.');
INSERT INTO PERSON_NAME_TYPE VALUES ('B', 'Name at birth','This is name recorded at birth (prior to adoption).');
INSERT INTO PERSON_NAME_TYPE VALUES ('P', 'Name of partner/spouse','This is the name of the partner or spouse.');
INSERT INTO PERSON_NAME_TYPE VALUES ('U', 'Unspecified','This is a name of unspecified type.');