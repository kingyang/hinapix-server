/*
 * Title      : TransientObject
 * Description:
 * Copyright  : (c) 1998-2001
 * Company    : CareScience, Inc.
 *              3600 Market Street
 *              6th Floor
 *              Philadelphia, PA 19104, U.S.A
 */
package org.openempi.data;

/**
 * All transient objects must extend abstract <code>TransientObject</code>.
 * The OID (Object ID) of a <code>TransientObject</code> MUST NOT be set until
 * the object has been persisted, as the OID is actually generated by Objectivity.
 *
 * @author CareScience
 * @version 1.4, 20010803
 */
public abstract class TransientObject implements java.io.Serializable {

  private String oid_;
  protected DocumentHeader documentHeader_;

  /**
   * Sets the OID.
   *
   * @param oid the new OID for this <code>TransientObject</code>
   */
  public void setOid(String oid) {
    oid_ = oid;
  }

  /**
   * Gets the OID.
   *
   * @return String the
   */
  public String getOid() {
    return oid_;
  }

  /**
   * Sets the OID.
   *
   * @param oid the new OID for this <code>TransientObject</code>
   */
  public void setOid(int id) {
    oid_ = Integer.toString(id);
  }

  /**
   * Gets the OID.
   *
   * @return String the
   */
  public int getOidInt() {
    return Integer.valueOf(oid_).intValue();
  }

  /**
   * Sets the <code>DocumentHeader</code> associated with an attribute.
   *
   * @param documentHeader the <code>DocumentHeader</code> associated with
   * this object.
   */
  public void setDocumentHeader(DocumentHeader documentHeader) {
    documentHeader_ = documentHeader;
  }

  /**
   * Gets the <code>DocumentHeader</code> associated with an attribute.
   *
   * @return DocumentHeader associated with an attribute
   */
  public DocumentHeader getDocumentHeader() {
    return documentHeader_;
  }

  public boolean equals(Object obj) {
    boolean isEqual = false;

    if (obj != null) {
      if (obj == this) {
        isEqual = true;
      }
      else if (getClass() == obj.getClass()) {
        TransientObject other = (TransientObject)obj;
        isEqual = true;

        // Perform value-based equality checks here:
        if ((getDocumentHeader() == null)
          ? (other.getDocumentHeader() != null)
          : (!getDocumentHeader().equals(other.getDocumentHeader()))) {
          isEqual = false;
        }
      }
    }
    return isEqual;
  }
}
