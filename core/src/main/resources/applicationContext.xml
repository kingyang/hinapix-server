<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
                        http://www.springframework.org/schema/context
                        http://www.springframework.org/schema/context/spring-context-4.3.xsd
                        http://www.springframework.org/schema/tx
                        http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
                        http://www.springframework.org/schema/aop
                        http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">
    <!-- =================================================================== -->
    <!-- XDS Registry Configuration                                          -->
    <!-- =================================================================== -->

    <!-- 引入配置文件 -->
    <bean id="propertyConfigurer"
          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:hinapix.properties</value>
            </list>
        </property>
    </bean>

    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${hinapix.dataSource.driver}"/>
        <property name="url" value="${hinapix.dataSource.url}"/>
        <property name="username" value="${hinapix.dataSource.username}"/>
        <property name="password" value="${hinapix.dataSource.password}"/>
        <!-- 初始化连接大小 -->
        <property name="initialSize" value="${hinapix.dataSource.initialSize}"></property>
        <!-- 连接池最大数量 -->
        <property name="maxActive" value="${hinapix.dataSource.maxActive}"></property>
        <!-- 连接池最大空闲 -->
        <property name="maxIdle" value="${hinapix.dataSource.maxIdle}"></property>
        <!-- 连接池最小空闲 -->
        <property name="minIdle" value="${hinapix.dataSource.minIdle}"></property>
        <!-- 获取连接最大等待时间 -->
        <property name="maxWait" value="${hinapix.dataSource.maxWait}"></property>
    </bean>

    <!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <!-- 自动扫描mapping.xml文件 -->
        <property name="mapperLocations" value="classpath:com/hinacom/pix/sqlmapping/*.xml"></property>
    </bean>

    <!-- DAO接口所在包名，Spring会自动查找其下的类 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.hinacom.pix.dao"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>

    <!-- transaction support-->
    <tx:annotation-driven proxy-target-class="true" transaction-manager="transactionManager"/>
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <bean id="storeLogger" class="com.hinacom.pix.ihe.log.SqlMessageStoreLogger" />

    <bean id="pdSupplierAdapter" class="com.hinacom.pix.adapter.PdSupplierAdapter"/>

    <bean id="pixManagerAdapter" class="com.hinacom.pix.adapter.PixManagerAdapter"/>

    <bean id="identityService" class="org.openempi.ics.pids.IdentityServiceImpl" />

    <bean id="personIdService" class="org.openempi.ics.pids.PersonIdServiceImpl" />

    <bean id="configurationLoader" class="com.hinacom.pix.ihe.configuration.ConfigurationLoader" />

</beans>